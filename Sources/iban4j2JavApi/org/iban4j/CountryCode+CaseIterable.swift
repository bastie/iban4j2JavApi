/*
 * SPDX-FileCopyrightText: 2024 - Sebastian Ritter <bastie@users.noreply.github.com>
 * SPDX-License-Identifier: MIT
 */

import Foundation

extension org.iban4j.CountryCode : CaseIterable {
  
  public static var allCases: [org.iban4j.CountryCode] {
    get {
      var result : [org.iban4j.CountryCode] = []
      result.append(AD())
      result.append(AE())
      result.append(AF())
      result.append(AG())
      result.append(AI())
      result.append(AL())
      result.append(AM())
      result.append(AO())
      result.append(AQ())
      result.append(AR())
      result.append(AS())
      result.append(AT())
      result.append(AU())
      result.append(AW())
      result.append(AX())
      result.append(AZ())
      
      result.append(BA())
      result.append(BB())
      result.append(BD())
      result.append(BE())
      result.append(BF())
      result.append(BG())
      result.append(BH())
      result.append(BI())
      result.append(BJ())
      result.append(BL())
      result.append(BM())
      result.append(BN())
      result.append(BO())
      result.append(BQ())
      result.append(BR())
      result.append(BS())
      result.append(BT())
      result.append(BV())
      result.append(BW())
      result.append(BY())
      result.append(BZ())
      
      result.append(CA())
      result.append(CC())
      result.append(CD())
      result.append(CF())
      result.append(CG())
      result.append(CH())
      result.append(CI())
      result.append(CK())
      result.append(CL())
      result.append(CM())
      result.append(CN())
      result.append(CO())
      result.append(CR())
      result.append(CU())
      result.append(CV())
      result.append(CW())
      result.append(CX())
      result.append(CY())
      result.append(CZ())
      
      result.append(DE())
      result.append(DJ())
      result.append(DK())
      result.append(DM())
      result.append(DO())
      result.append(DZ())
      
      result.append(EC())
      result.append(EE())
      result.append(EG())
      result.append(EH())
      result.append(ER())
      result.append(ES())
      result.append(ET())
      
      result.append(FI())
      result.append(FJ())
      result.append(FK())
      result.append(FM())
      result.append(FO())
      result.append(FR())
      
      result.append(GA())
      result.append(GB())
      result.append(GD())
      result.append(GE())
      result.append(GF())
      result.append(GG())
      result.append(GH())
      result.append(GI())
      result.append(GL())
      result.append(GM())
      result.append(GN())
      result.append(GP())
      result.append(GQ())
      result.append(GR())
      result.append(GS())
      result.append(GT())
      result.append(GU())
      result.append(GW())
      result.append(GY())
      
      result.append(HK())
      result.append(HM())
      result.append(HN())
      result.append(HR())
      result.append(HT())
      result.append(HU())
      
      result.append(ID())
      result.append(IE())
      result.append(IL())
      result.append(IM())
      result.append(IN())
      result.append(IO())
      result.append(IQ())
      result.append(IR())
      result.append(IS())
      result.append(IT())
      
      result.append(JE())
      result.append(JM())
      result.append(JO())
      result.append(JP())
      
      result.append(KE())
      result.append(KG())
      result.append(KH())
      result.append(KI())
      result.append(KM())
      result.append(KN())
      result.append(KP())
      result.append(KR())
      result.append(KW())
      result.append(KY())
      result.append(KZ())
      
      result.append(LA())
      result.append(LB())
      result.append(LC())
      result.append(LI())
      result.append(LK())
      result.append(LR())
      result.append(LS())
      result.append(LT())
      result.append(LU())
      result.append(LV())
      result.append(LY())
      
      result.append(MA())
      result.append(MC())
      result.append(MD())
      result.append(ME())
      result.append(MF())
      result.append(MG())
      result.append(MH())
      result.append(MK())
      result.append(ML())
      result.append(MM())
      result.append(MN())
      result.append(MO())
      result.append(MP())
      result.append(MQ())
      result.append(MR())
      result.append(MS())
      result.append(MT())
      result.append(MU())
      result.append(MV())
      result.append(MW())
      result.append(MX())
      result.append(MY())
      result.append(MZ())
      
      result.append(NA())
      result.append(NC())
      result.append(NE())
      result.append(NF())
      result.append(NG())
      result.append(NI())
      result.append(NL())
      result.append(NO())
      result.append(NP())
      result.append(NR())
      result.append(NU())
      result.append(NZ())
      
      result.append(OM())
      
      result.append(PA())
      result.append(PE())
      result.append(PF())
      result.append(PG())
      result.append(PH())
      result.append(PK())
      result.append(PL())
      result.append(PM())
      result.append(PN())
      result.append(PR())
      result.append(PS())
      result.append(PT())
      result.append(PW())
      result.append(PY())
      
      result.append(QA())
      
      result.append(RE())
      result.append(RO())
      result.append(RS())
      result.append(RU())
      result.append(RW())
      
      result.append(SA())
      result.append(SB())
      result.append(SC())
      result.append(SD())
      result.append(SE())
      result.append(SG())
      result.append(SH())
      result.append(SI())
      result.append(SJ())
      result.append(SK())
      result.append(SL())
      result.append(SM())
      result.append(SN())
      result.append(SO())
      result.append(SR())
      result.append(SS())
      result.append(ST())
      result.append(SV())
      result.append(SX())
      result.append(SY())
      result.append(SZ())
      
      result.append(TC())
      result.append(TD())
      result.append(TF())
      result.append(TG())
      result.append(TH())
      result.append(TJ())
      result.append(TK())
      result.append(TL())
      result.append(TM())
      result.append(TN())
      result.append(TO())
      result.append(TR())
      result.append(TT())
      result.append(TV())
      result.append(TW())
      result.append(TZ())
      
      result.append(UA())
      result.append(UG())
      result.append(UM())
      result.append(US())
      result.append(UY())
      result.append(UZ())
      
      result.append(VA())
      result.append(VC())
      result.append(VE())
      result.append(VG())
      result.append(VI())
      result.append(VN())
      result.append(VU())
      
      result.append(WF())
      result.append(WS())
      
      result.append(XK())
      
      result.append(YE())
      result.append(YT())
      
      result.append(ZA())
      result.append(ZM())
      result.append(ZW())
      return result
    }
  }
  
  // TODO: can we create an enum base type extension
  public static func values () -> [org.iban4j.CountryCode] {
    return org.iban4j.CountryCode.allCases
  }
}
